<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.pharbers</groupId>
    <artifactId>pharbers-max</artifactId>
    <version>0.1</version>
    <!-- Maven profiles allow you to support both Scala 2.10, 2.11 and Scala 2.12 with
      the right dependencies for modules specified for each version separately -->
    <profiles>
        <profile>
            <id>scala-2.11</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <hadoop.version>2.7.2</hadoop.version>
                <scalaVersion>2.11.8</scalaVersion>
                <scalaBinaryVersion>2.11</scalaBinaryVersion>
            </properties>
            <repositories>
                <repository>
                    <id>spark</id>
                    <name>spark</name>
                    <url>https://dl.bintray.com/spark-packages/maven/</url>
                </repository>
            </repositories>
            <dependencies>
                <!-- scala lib -->
                <dependency>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-library</artifactId>
                    <version>${scalaVersion}</version>
                </dependency>
                <dependency>
                    <groupId>org.scala-lang.modules</groupId>
                    <artifactId>scala-xml_${scalaBinaryVersion}</artifactId>
                    <version>1.0.6</version>
                </dependency>
                <dependency>
                    <groupId>org.scala-lang.modules</groupId>
                    <artifactId>scala-parser-combinators_${scalaBinaryVersion}</artifactId>
                    <version>1.0.5</version>
                </dependency>

                <dependency>
                    <groupId>com.typesafe.play</groupId>
                    <artifactId>play-json_2.11</artifactId>
                    <version>2.5.0-M2</version>
                </dependency>

                <!-- specs test -->
                <dependency>
                    <groupId>org.scalatest</groupId>
                    <artifactId>scalatest_2.11</artifactId>
                    <version>3.0.1</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.specs2</groupId>
                    <artifactId>specs2_2.11</artifactId>
                    <version>3.7</version>
                    <type>pom</type>
                    <scope>test</scope>
                </dependency>

                <!-- pharbers lib -->
                <dependency>
                    <groupId>com.pharbers</groupId>
                    <artifactId>base_module</artifactId>
                    <version>1.0</version>
                </dependency>
                <dependency>
                    <groupId>com.pharbers</groupId>
                    <artifactId>pharbers-spark</artifactId>
                    <version>0.1</version>
                </dependency>
                <dependency>
                    <groupId>com.pharbers</groupId>
                    <artifactId>pharbers-paction</artifactId>
                    <version>0.1</version>
                </dependency>
                <dependency>
                    <groupId>com.pharbers</groupId>
                    <artifactId>pharbers-redis</artifactId>
                    <version>0.1</version>
                </dependency>
                <dependency>
                    <groupId>com.pharbers</groupId>
                    <artifactId>pharbers-mongodb</artifactId>
                    <version>0.1</version>
                </dependency>
                <dependency>
                    <groupId>com.pharbers</groupId>
                    <artifactId>pharbers-errorcode</artifactId>
                    <version>0.1</version>
                </dependency>
                <dependency>
                    <groupId>com.pharbers</groupId>
                    <artifactId>pharbers-security</artifactId>
                    <version>0.1</version>
                </dependency>
                <dependency>
                    <groupId>com.pharbers</groupId>
                    <artifactId>pharbers-memory</artifactId>
                    <version>0.1</version>
                </dependency>
                <dependency>
                    <groupId>com.pharbers</groupId>
                    <artifactId>pharbers-third</artifactId>
                    <version>0.1</version>
                </dependency>
                <dependency>
                    <groupId>com.pharbers</groupId>
                    <artifactId>pharbers-pattern</artifactId>
                    <version>0.1</version>
                </dependency>
                <dependency>
                    <groupId>com.pharbers</groupId>
                    <artifactId>pharbers-timer</artifactId>
                    <version>0.1</version>
                </dependency>
                <dependency>
                    <groupId>com.pharbers</groupId>
                    <artifactId>pharbers-xmpp</artifactId>
                    <version>0.1</version>
                </dependency>
                <dependency>
                    <groupId>com.pharbers</groupId>
                    <artifactId>pharbers-another-pattern</artifactId>
                    <version>0.1</version>
                </dependency>
                <dependency>
                    <groupId>com.pharbers</groupId>
                    <artifactId>macros</artifactId>
                    <version>1.0</version>
                </dependency>

                <!-- spark lib -->
                <dependency>
                    <groupId>com.databricks</groupId>
                    <artifactId>spark-avro_2.11</artifactId>
                    <version>3.2.0</version>
                </dependency>
                <!--<dependency>-->
                    <!--<groupId>org.apache.spark</groupId>-->
                    <!--<artifactId>spark-streaming_2.11</artifactId>-->
                    <!--<version>2.0.0</version>-->
                <!--</dependency>-->
                <!-- Hadoop test artifact for running mini clusters -->
                <!--<dependency>-->
                    <!--<groupId>org.apache.hadoop</groupId>-->
                    <!--<artifactId>hadoop-minicluster</artifactId>-->
                    <!--<version>${hadooop.version}</version>-->
                    <!--<scope>test</scope>-->
                <!--</dependency>-->

                <!-- hadoop -->
                <dependency>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-common</artifactId>
                    <version>${hadoop.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-hdfs</artifactId>
                    <version>${hadoop.version}</version>
                </dependency>
                <!-- spark -->
                <dependency>
                    <groupId>org.apache.spark</groupId>
                    <artifactId>spark-core_2.11</artifactId>
                    <version>2.3.0</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.spark</groupId>
                    <artifactId>spark-sql_2.11</artifactId>
                    <version>2.3.0</version>
                </dependency>
                <dependency>
                    <groupId>org.mongodb.spark</groupId>
                    <artifactId>mongo-spark-connector_2.11</artifactId>
                    <version>2.3.0</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.spark</groupId>
                    <artifactId>spark-yarn_2.11</artifactId>
                    <version>2.3.0</version>
                </dependency>

                <dependency>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-all</artifactId>
                    <version>4.1.17.Final</version>
                </dependency>
                <dependency>
                    <groupId>io.netty</groupId>
                    <artifactId>netty</artifactId>
                    <version>3.9.9.Final</version>
                </dependency>

                <!-- mongodb lib -->
                <dependency>
                    <groupId>org.mongodb</groupId>
                    <artifactId>casbah_2.11</artifactId>
                    <version>3.1.1</version>
                    <type>pom</type>
                </dependency>

                <!-- akka actor -->
                <dependency>
                    <groupId>com.typesafe.akka</groupId>
                    <artifactId>akka-actor_2.11</artifactId>
                    <version>2.4.16</version>
                </dependency>

                <!-- kafka client -->
                <dependency>
                    <groupId>org.apache.kafka</groupId>
                    <artifactId>kafka_2.11</artifactId>
                    <version>1.1.0</version>
                </dependency>
                <dependency>
                    <groupId>org.apache.kafka</groupId>
                    <artifactId>kafka-streams</artifactId>
                    <version>1.1.0</version>
                </dependency>

                <!-- avro -->
                <dependency>
                    <groupId>org.apache.avro</groupId>
                    <artifactId>avro</artifactId>
                    <version>1.7.6</version>
                </dependency>

                <!-- https://mvnrepository.com/artifact/amplab/spark-indexedrdd -->
                <!--<dependency>-->
                    <!--<groupId>amplab</groupId>-->
                    <!--<artifactId>spark-indexedrdd</artifactId>-->
                    <!--<version>0.4.0</version>-->
                <!--</dependency>-->

                <dependency>
                    <groupId>amplab</groupId>
                    <artifactId>spark-indexedrdd</artifactId>
                    <version>0.4.0</version>
                </dependency>

                <!--spray lib-->
                <dependency>
                    <groupId>io.spray</groupId>
                    <artifactId>spray-httpx_${scalaBinaryVersion}</artifactId>
                    <version>1.3.3</version>
                </dependency>
                <dependency>
                    <groupId>io.spray</groupId>
                    <artifactId>spray-json_${scalaBinaryVersion}</artifactId>
                    <version>1.3.2</version>
                </dependency>
                <dependency>
                    <groupId>io.circe</groupId>
                    <artifactId>circe-core_${scalaBinaryVersion}</artifactId>
                    <version>0.9.3</version>
                </dependency>
                <dependency>
                    <groupId>io.circe</groupId>
                    <artifactId>circe-generic_${scalaBinaryVersion}</artifactId>
                    <version>0.9.3</version>
                </dependency>
                <dependency>
                    <groupId>io.circe</groupId>
                    <artifactId>circe-parser_${scalaBinaryVersion}</artifactId>
                    <version>0.9.3</version>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <plugins>
            <!-- 将工程依赖的jar包，复制至target/lib目录下进行管理，方便已生成jar的工程进行引用。 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- 打包jar文件时，配置manifest文件，加入lib包的jar依赖 配置 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <classesDirectory>target/classes/</classesDirectory>
                    <archive>
                        <manifest>
                            <!-- 主函数的入口 -->
                            <mainClass>com.pharbers.main</mainClass>
                            <!-- 打包时 MANIFEST.MF文件不记录的时间戳版本 -->
                            <useUniqueVersions>false</useUniqueVersions>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                        </manifest>
                        <manifestEntries>
                            <Class-Path>.</Class-Path>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
            <!--shade-->
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-shade-plugin</artifactId>-->
                <!--<version>2.3</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<phase>package</phase>-->
                        <!--<goals>-->
                            <!--<goal>shade</goal>-->
                        <!--</goals>-->
                        <!--<configuration>-->
                            <!--<transformers>-->
                                <!--<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>-->
                            <!--</transformers>-->
                        <!--</configuration>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
                <executions>
                    <execution>
                        <id>java-compile-first</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>java-test-compile</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <args>
                        <arg>-nobootcp</arg>
                    </args>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>1.0</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>WDF TestSuite.txt</filereports>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--docker 配置-->
            <!--<plugin>-->
                <!--<groupId>com.spotify</groupId>-->
                <!--<artifactId>docker-maven-plugin</artifactId>-->
                <!--<version>1.0.0</version>-->
                <!--<configuration>-->
                    <!--<imageName>max-calc</imageName>-->
                    <!--<baseImage>java</baseImage>-->
                    <!--<maintainer>czhang@pharbers.com</maintainer>-->
                    <!--<workdir>/ROOT</workdir>-->
                    <!--<cmd>["java", "-version"]</cmd>-->
                    <!--<entryPoint>["scala", "-cp", "${project.build.finalName}.jar com.pharbers.main]</entryPoint>-->
                    <!--&lt;!&ndash; 这里是复制 jar 包到 docker 容器指定目录配置 &ndash;&gt;-->
                    <!--<resources>-->
                        <!--<resource>-->
                            <!--<targetPath>/ROOT</targetPath>-->
                            <!--<directory>${project.build.directory}</directory>-->
                            <!--<include>${project.build.finalName}.jar</include>-->
                        <!--</resource>-->
                    <!--</resources>-->
                <!--</configuration>-->
            <!--</plugin>-->
        </plugins>
    </build>
</project>
